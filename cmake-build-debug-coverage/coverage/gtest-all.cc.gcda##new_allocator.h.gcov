        -:    0:Source:C:/PROGRA~1/JETBRA~1/CLION2~1.4/bin/mingw/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++/ext/new_allocator.h
        -:    0:Graph:D:\BUAA_Files\Learning_Files\Senior_Three_2\BUAA_SE\Pair_Project\2023_Pair\cmake-build-debug-coverage\lib\googletest\CMakeFiles\gtest.dir\src\gtest-all.cc.gcno
        -:    0:Data:D:\BUAA_Files\Learning_Files\Senior_Three_2\BUAA_SE\Pair_Project\2023_Pair\cmake-build-debug-coverage\lib\googletest\CMakeFiles\gtest.dir\src\gtest-all.cc.gcda
        -:    0:Runs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  /**
        -:   45:   *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
        -:   46:   *  @ingroup allocators
        -:   47:   *
        -:   48:   *  This is precisely the allocator defined in the C++ Standard.
        -:   49:   *    - all allocation calls operator new
        -:   50:   *    - all deallocation calls operator delete
        -:   51:   *
        -:   52:   *  @tparam  _Tp  Type of allocated object.
        -:   53:   */
        -:   54:  template<typename _Tp>
        -:   55:    class new_allocator
        -:   56:    {
        -:   57:    public:
        -:   58:      typedef _Tp        value_type;
        -:   59:      typedef std::size_t     size_type;
        -:   60:      typedef std::ptrdiff_t  difference_type;
        -:   61:#if __cplusplus <= 201703L
        -:   62:      typedef _Tp*       pointer;
        -:   63:      typedef const _Tp* const_pointer;
        -:   64:      typedef _Tp&       reference;
        -:   65:      typedef const _Tp& const_reference;
        -:   66:
        -:   67:      template<typename _Tp1>
        -:   68:	struct rebind
        -:   69:	{ typedef new_allocator<_Tp1> other; };
        -:   70:#endif
        -:   71:
        -:   72:#if __cplusplus >= 201103L
        -:   73:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   74:      // 2103. propagate_on_container_move_assignment
        -:   75:      typedef std::true_type propagate_on_container_move_assignment;
        -:   76:#endif
        -:   77:
        -:   78:      _GLIBCXX20_CONSTEXPR
      42*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIcEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIwEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIwEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEEC2Ev called 5 returned 100% blocks executed 100%
        5:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIdEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEEC2Ev called 14 returned 100% blocks executed 100%
       14:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8internal30ParameterizedTestSuiteInfoBaseEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8internal30ParameterizedTestSuiteInfoBaseEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIyEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIyEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEEC2Ev called 14 returned 100% blocks executed 100%
       14:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIiEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
        -:   81:      _GLIBCXX20_CONSTEXPR
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEEC2ERKS8_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEEC2ERKS8_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEEC2ERKS4_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEEC2ERKS4_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEEC2ERKS5_:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEEC2ERKS5_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEEC2ERKSE_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEEC2ERKSE_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   83:
        -:   84:      template<typename _Tp1>
        -:   85:	_GLIBCXX20_CONSTEXPR
        -:   86:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   87:
        -:   88:#if __cplusplus <= 201703L
       5*:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
function _ZN9__gnu_cxx13new_allocatorIcED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIwED2Ev:
function _ZN9__gnu_cxx13new_allocatorIwED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8internal30ParameterizedTestSuiteInfoBaseEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8internal30ParameterizedTestSuiteInfoBaseEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEED2Ev called 5 returned 100% blocks executed 100%
        5:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdED2Ev:
function _ZN9__gnu_cxx13new_allocatorIdED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIyED2Ev:
function _ZN9__gnu_cxx13new_allocatorIyED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiED2Ev:
function _ZN9__gnu_cxx13new_allocatorIiED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   90:
        -:   91:      pointer
        -:   92:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   93:      { return std::__addressof(__x); }
        -:   94:
        -:   95:      const_pointer
        -:   96:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   97:      { return std::__addressof(__x); }
        -:   98:#endif
        -:   99:
        -:  100:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:  101:      // about what the return value is when __n == 0.
        -:  102:      _GLIBCXX_NODISCARD _Tp*
      14*:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
      14*:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    #####:  116:	      std::__throw_bad_array_new_length();
    #####:  117:	    std::__throw_bad_alloc();
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
      14*:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE8allocateEyPKv called 5 returned 100% blocks executed 62%
        5:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        5:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        5:  111-block  0
call    0 returned 5
branch  1 taken 0 (fallthrough)
branch  2 taken 5
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        5:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        5:  127-block  0
call    0 returned 5
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE8allocateEyPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE8allocateEyPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIdE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIdE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIyE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIyE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv called 6 returned 100% blocks executed 62%
        6:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        6:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        6:  111-block  0
call    0 returned 6
branch  1 taken 0 (fallthrough)
branch  2 taken 6
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        6:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        6:  127-block  0
call    0 returned 6
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE8allocateEyPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
        -:  129:
        -:  130:      // __p is not permitted to be a null pointer.
        -:  131:      void
       9*:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       9*:  145:	::operator delete(__p
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
       9*:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE10deallocateEPS3_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE10deallocateEPS2_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8internal30ParameterizedTestSuiteInfoBaseEE10deallocateEPS4_y:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8internal30ParameterizedTestSuiteInfoBaseEE10deallocateEPS4_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_y:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE10deallocateEPS5_y:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE10deallocateEPS5_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE10deallocateEPS4_y:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE10deallocateEPS4_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIyE10deallocateEPyy:
function _ZN9__gnu_cxx13new_allocatorIyE10deallocateEPyy called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE10deallocateEPS2_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE10deallocateEPS3_y called 4 returned 100% blocks executed 100%
        4:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        4:  145:	::operator delete(__p
        4:  145-block  0
call    0 returned 4
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        4:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy:
function _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy called 4 returned 100% blocks executed 100%
        4:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        4:  145:	::operator delete(__p
        4:  145-block  0
call    0 returned 4
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        4:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE10deallocateEPS3_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE10deallocateEPS3_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE10deallocateEPS9_y:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE10deallocateEPS9_y called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        1:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdy:
function _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdy called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEE10deallocateEPS3_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEE10deallocateEPS7_y:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEE10deallocateEPS7_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE10deallocateEPS6_y:
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE10deallocateEPS6_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE10deallocateEPS3_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE10deallocateEPSD_y:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE10deallocateEPSD_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE10deallocateEPSK_y:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE10deallocateEPSK_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_y:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE10deallocateEPSF_y:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE10deallocateEPSF_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE10deallocateEPSB_y:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE10deallocateEPSB_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
    #####:  150:      }
------------------
        -:  151:
        -:  152:#if __cplusplus <= 201703L
        -:  153:      size_type
      26*:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
      26*:  155:      { return _M_max_size(); }
------------------
_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv called 12 returned 100% blocks executed 100%
       12:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       12:  155:      { return _M_max_size(); }
       12:  155-block  0
call    0 returned 12
------------------
_ZNK9__gnu_cxx13new_allocatorIyE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIyE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE8max_sizeEv called 2 returned 100% blocks executed 100%
        2:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        2:  155:      { return _M_max_size(); }
        2:  155-block  0
call    0 returned 2
------------------
_ZNK9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE8max_sizeEv called 2 returned 100% blocks executed 100%
        2:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        2:  155:      { return _M_max_size(); }
        2:  155-block  0
call    0 returned 2
------------------
_ZNK9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE8max_sizeEv called 10 returned 100% blocks executed 100%
       10:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       10:  155:      { return _M_max_size(); }
       10:  155-block  0
call    0 returned 10
------------------
_ZNK9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt6vectorIN7testing8internal13edit_distance8EditTypeESaIS5_EEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt6vectorIdSaIdEEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
        -:  156:
        -:  157:#if __cplusplus >= 201103L
        -:  158:      template<typename _Up, typename... _Args>
        -:  159:	void
      28*:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      28*:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE9constructIS3_JS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE9constructIS3_JS3_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE9constructIS5_JRKS5_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE9constructIS2_JRKS2_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE9constructIS4_JRKS4_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE9constructIS4_JRKS4_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE9constructIS2_JRKS2_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 12 returned 100% blocks executed 100%
       12:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       12:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       12:  162-block  0
call    0 returned 12
call    1 returned 12
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 1 returned 100% blocks executed 100%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 1 returned 100% blocks executed 100%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIyE9constructIyJyEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIyE9constructIyJyEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ called 13 returned 100% blocks executed 100%
       13:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       13:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       13:  162-block  0
call    0 returned 13
call    1 returned 13
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE9constructIS8_JS8_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE9constructIS8_JS8_EEEvPT_DpOT0_ called 1 returned 100% blocks executed 100%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE9constructIS5_JS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE9constructIS5_JS5_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE9constructISJ_JS2_ImSI_EEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE9constructISJ_JS2_ImSI_EEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE9constructISC_JS2_IS7_SB_EEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE9constructISC_JS2_IS7_SB_EEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE9constructISE_JS8_SD_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE9constructISE_JS8_SD_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESH_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESH_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
    $$$$$:  162-block  3
    $$$$$:  162-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JS7_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JS7_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE9constructIS5_JS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE9constructIS5_JS5_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE9constructIS2_JS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE9constructIS2_JS2_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE9constructIS2_JS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE9constructIS2_JS2_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE9constructIS3_JS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE9constructIS3_JS3_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
        -:  163:
        -:  164:      template<typename _Up>
        -:  165:	void
       1*:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
       1*:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing9TestSuiteEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal9TraceInfoEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN7testing8internal26ThreadLocalValueHolderBaseEEE7destroyIS5_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN7testing14TestPartResultEE7destroyIS2_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE7destroyIS4_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN7testing8internal13edit_distance8EditTypeEE7destroyIS4_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeISt4pairIcPKcEEE7destroyIS5_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN7testing12TestPropertyEE7destroyIS2_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing8TestInfoEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing17TestEventListenerEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIPN7testing11EnvironmentEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE7destroyISA_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyEEE7destroyISA_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIyE7destroyIyEEvPT_:
function _ZN9__gnu_cxx13new_allocatorIyE7destroyIyEEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_:
function _ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE7destroyISC_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS4_26ThreadLocalValueHolderBaseEEEEE7destroyISC_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE7destroyISJ_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmSt3mapIPKN7testing8internal15ThreadLocalBaseESt10shared_ptrINS6_26ThreadLocalValueHolderBaseEESt4lessIS9_ESaIS2_IKS9_SC_EEEEEE7destroyISJ_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE7destroyISE_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN7testing8internal34TypeParameterizedTestSuiteRegistry30TypeParameterizedTestSuiteInfoEEEE7destroyISE_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE7destroyIS8_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
        -:  169:#else
        -:  170:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  171:      // 402. wrong new expression in [some_] allocator::construct
        -:  172:      void
        -:  173:      construct(pointer __p, const _Tp& __val)
        -:  174:      { ::new((void *)__p) _Tp(__val); }
        -:  175:
        -:  176:      void
        -:  177:      destroy(pointer __p) { __p->~_Tp(); }
        -:  178:#endif
        -:  179:#endif // ! C++20
        -:  180:
        -:  181:      template<typename _Up>
        -:  182:	friend _GLIBCXX20_CONSTEXPR bool
        -:  183:	operator==(const new_allocator&, const new_allocator<_Up>&)
        -:  184:	_GLIBCXX_NOTHROW
        -:  185:	{ return true; }
        -:  186:
        -:  187:#if __cpp_impl_three_way_comparison < 201907L
        -:  188:      template<typename _Up>
        -:  189:	friend _GLIBCXX20_CONSTEXPR bool
        -:  190:	operator!=(const new_allocator&, const new_allocator<_Up>&)
        -:  191:	_GLIBCXX_NOTHROW
        -:  192:	{ return false; }
        -:  193:#endif
        -:  194:
        -:  195:    private:
        -:  196:      _GLIBCXX_CONSTEXPR size_type
      40*:  197:      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  198:      {
        -:  199:#if __PTRDIFF_MAX__ < __SIZE_MAX__
      40*:  200:	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  201:#else
        -:  202:	return std::size_t(-1) / sizeof(_Tp);
        -:  203:#endif
        -:  204:      }
        -:  205:    };
        -:  206:
        -:  207:_GLIBCXX_END_NAMESPACE_VERSION
        -:  208:} // namespace
        -:  209:
        -:  210:#endif
